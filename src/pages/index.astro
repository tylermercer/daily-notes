---
import Layout from "@layouts/Base.astro";
import { getCollection } from "astro:content";
// import { Puff } from "astro-svg-loaders";
import UnsplashBackground from "@components/UnsplashBackground.astro";
import { Image } from "astro:assets";
import compass from "@assets/compass-background.png";
import filterOutFutureNotesIfProduction from "@utils/filterOutFutureNotesIfProduction";
import sortByDate from "@utils/sortByDate";

const notes = sortByDate(
	filterOutFutureNotesIfProduction(await getCollection("notes")),
);

const latest = notes[0];
const earliest = notes.at(-1)!;

const unsplashUrl =
	"https://images.unsplash.com/photo-1502571021998-c562c753aedc?crop=entropy&cs=srgb&fm=jpg&ixid=M3w2ODM3NDZ8MHwxfGFsbHx8fHx8fHx8fDE3MzM0OTUwNTR8&ixlib=rb-4.0.3&q=85";
const unsplashColor = "#0c5959";

const unsplashAttribution = {
	name: "Rodion Kustaiev",
	userUrl: "https://unsplash.com/@frostroomhead",
	imageUrl: "https://unsplash.com/photos/f4sMm6nJiLc",
};
---

<Layout unsplashColor={unsplashColor}>
	<UnsplashBackground unsplashUrl={unsplashUrl} unsplashColor={unsplashColor}>
		<main class="u-guttered">
			<div class="container l-stack">
				<Image class="compass" src={compass} alt="" />
				<!-- <Puff /> -->
				<nav class="main-nav">
					<p><a href=`/${latest.id}`>Latest Note</a></p>
					<p>
						<a class="continue-reading" href=`/${earliest.id}`
							>Continue Reading</a
						>
					</p>
				</nav>
				<div class="attribution u-guttered">
					Photo by{" "}
					<a
						href={unsplashAttribution.userUrl}
						target="_blank"
						rel="noopener noreferrer"
					>
						{unsplashAttribution.name}
					</a>
					on{" "}
					<a
						href={unsplashAttribution.imageUrl}
						target="_blank"
						rel="noopener noreferrer"
					>
						Unsplash
					</a>
				</div>
			</div>
		</main>
	</UnsplashBackground>
</Layout>
<!-- <script>
	document.addEventListener("DOMContentLoaded", () => {
		const latest = (document.querySelector("[data-latest]") as HTMLElement)
			.dataset.latest;
		requestIdleCallback(() => {
			setTimeout(
				() => {
					window.location.href = `/${latest}`;
				},
				500 + Math.random() * 3000,
			);
		});
	});
</script> -->

<script>
	const lastRead = localStorage.getItem("lastReadPost") ?? "2025-05-01";
	const today = new Date().toISOString().slice(0, 10); // "YYYY-MM-DD"

	if (lastRead < today) {
		const nextDate = getNextDate(lastRead);
		const nextUrl = `/${nextDate}/`;

		// Use HEAD request to check if the page exists
		fetch(nextUrl, { method: "HEAD" })
			.then((res) => {
				if (res.ok) {
					(
						document.querySelector(
							".continue-reading",
						) as HTMLAnchorElement
					).href = nextUrl;
				}
			})
			.catch(() => {
				console.log("Failed to fetch page for " + nextDate);
			});
	}

	function getNextDate(dateStr: string): string {
		const d = new Date(dateStr);
		d.setDate(d.getDate() + 1);
		return d.toISOString().slice(0, 10);
	}
</script>

<style>
	main {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		height: 100vh;
		height: 100svh;
		width: 100vw;
	}
	nav.main-nav {
		text-align: center;
	}
	p {
		font-size: var(--step-2);
	}
	.container {
		padding-top: 1rem;
	}
	.compass {
		max-width: 90%;
		height: auto;
		opacity: 0.7;
		transform: translate(-2%, 0.4%);
	}
	/* .container > :global(svg) {
		opacity: 0.7;
		width: 80%;
		height: 80%;
	} */

	.attribution {
		position: absolute;
		padding-block: 0;
		bottom: 0;
		font-size: var(--step--1);
		opacity: 0.8;
	}
</style>
